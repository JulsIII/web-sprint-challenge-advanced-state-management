[{"C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\index.js":"1","C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\App.js":"2","C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\mocks\\browser.js":"3","C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\components\\SmurfDisplay.js":"4","C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\components\\AddForm.js":"5","C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\mocks\\handlers.js":"6","C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\reducers\\index.js":"7","C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\actions\\index.js":"8","C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\components\\Smurf.js":"9"},{"size":1110,"mtime":1611338597065,"results":"10","hashOfConfig":"11"},{"size":809,"mtime":1611334867791,"results":"12","hashOfConfig":"11"},{"size":190,"mtime":1611334867793,"results":"13","hashOfConfig":"11"},{"size":898,"mtime":1611340771721,"results":"14","hashOfConfig":"11"},{"size":2452,"mtime":1611338623398,"results":"15","hashOfConfig":"11"},{"size":3414,"mtime":1611334867793,"results":"16","hashOfConfig":"11"},{"size":1393,"mtime":1611342804066,"results":"17","hashOfConfig":"11"},{"size":2502,"mtime":1611342803407,"results":"18","hashOfConfig":"11"},{"size":846,"mtime":1611340771721,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"130qobm",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\index.js",[],"C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\App.js",["41"],"C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\mocks\\browser.js",[],["42","43"],"C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\components\\SmurfDisplay.js",[],"C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\components\\AddForm.js",[],"C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\mocks\\handlers.js",[],"C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\reducers\\index.js",["44"],"import { FETCH_SMURFS_START, FETCH_SMURF_END, ADD_SMURF_TO_LIST, SET_ERROR_TEXT} from './../actions';\r\n\r\n\r\nexport const initialState = {\r\n    [],\r\n    loading: false,\r\n    errorText: 'null'\r\n}\r\n\r\nexport const reducer = (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case(FETCH_SMURFS_START):\r\n          return({\r\n            ...state,\r\n            isFetching: true,\r\n            smurfs:[]\r\n          });\r\n        case(FETCH_SMURF_END):\r\n          return({\r\n            ...state,\r\n            smurfs: action.payload,\r\n            isFetching: false\r\n          })\r\n        case(ADD_SMURF_TO_LIST):\r\n          return({\r\n            ...state,\r\n            \r\n            \r\n          });\r\n          case(SET_ERROR_TEXT):\r\n          return({\r\n            ...state,\r\n            error: action.payload\r\n          });\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\n\r\n//Task List:\r\n//1. Add in the initialState needed to hold: \r\n//      - an array of smurfs\r\n//      - a boolean indicating if the app is loading\r\n//      - error text\r\n//2. Setup your reducer to take the state and action as peremeters\r\n//3. Add in cases to your reducer to handle:\r\n//      - The start of an api call\r\n//      - The end of an api call\r\n//      - The adding a smurf to the smurf list when added into payload\r\n//      - Setting Error Text\r\n//      - Any other state changes you see as necessary","C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\actions\\index.js",["45"],"import axios from 'axios';\r\n\r\n//Task List:\r\n//1. Add fetch smurfs action: \r\n//              - fetch and return initial list of smurfs\r\n//              - dispatch actions that indicate if we are waiting for a server response\r\n//              - dispatch an error text action if an error is returned from the server\r\n//2. Add add smurf action:\r\n//              - dispatch an error text action if smurf data does not includes a name, nickname and position field\r\n//              - send a post request with the smurf as body to see if there is an error\r\n//              - dispatch add smurf action if request is successful\r\n//              - dispatch an error text action if an request returns an error\r\n//3. Add set error text action:\r\n//              - return action object setting error text\r\n//4. Any other actions you deem nessiary to complete application.\r\n\r\n// FETCH_SMURFS_START, FETCH_SMURF_END, ADD_SMURF_TO_LIST, SET_ERROR_TEXT\r\n\r\nexport const FETCH_SMURFS_START = \"FETCH_SMURFS_START\";\r\nexport const FETCH_SMURF_END = \"FETCH_SMURF_END\";\r\nexport const ADD_SMURF_TO_LIST = \"ADD_SMURF_TO_LIST\";\r\nexport const SET_ERROR_TEXT = \"SET_ERROR_TEXT\";\r\n\r\nexport const fetchSmurfs = () => dispatch => {\r\n    dispatch({ type:FETCH_SMURFS_START});\r\n    axios \r\n        .get('http://localhost:3333/smurfs')\r\n        \r\n        .then((res)=>{\r\n            console.log('the get*****', res.data);\r\n            dispatch({ type:FETCH_SMURF_END, payload: res.data});\r\n        })\r\n        .catch(err => {\r\n            dispatch({ type:SET_ERROR_TEXT, payload: 'Get Failed'});\r\n        });\r\n        \r\n}\r\n\r\n// export const addSmurf = () => dispatch => {\r\n//     dispatch({ type:FETCH_SMURFS_START});\r\n//     axios \r\n//         .get('http://localhost:3333/smurfs')\r\n        \r\n//         .then((res)=>{\r\n//             console.log('the get*****', res.data);\r\n//             dispatch({ type:FETCH_SMURF_END, payload: res.data});\r\n//         })\r\n//         .catch(err => {\r\n//             dispatch({ type:SET_ERROR_TEXT, payload: 'Get Failed'});\r\n//         });\r\n        \r\n}\r\n\r\n// export function addSmurf(newSmurf) {\r\n//     return {\r\n//       type: ADD_SMURF_TO_LIST,\r\n//       payload: newSmurf\r\n//     };\r\n//   }\r\n  \r\n//   export function addNewFriend(newFriend) {\r\n//     return {\r\n//       type: ADD_FRIEND,\r\n//       payload: newFriend\r\n//     };\r\n//   }\r\n  \r\n//   export function toggleFriend(index) {\r\n//     return {\r\n//       type: TOGGLE_FRIEND,\r\n//       payload: index\r\n//     };\r\n//   }\r\n\r\n// err.response.code","C:\\Users\\jules\\documents\\git\\web-sprint-challenge-advanced-state-management\\src\\components\\Smurf.js",["46","47","48"],{"ruleId":"49","severity":1,"message":"50","line":21,"column":11,"nodeType":"51","endLine":21,"endColumn":39},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":null,"fatal":true,"severity":2,"message":"56","line":5,"column":6},{"ruleId":null,"fatal":true,"severity":2,"message":"57","line":52,"column":1},{"ruleId":"58","severity":1,"message":"59","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":17},{"ruleId":"58","severity":1,"message":"62","line":6,"column":17,"nodeType":"60","messageId":"61","endLine":6,"endColumn":22},{"ruleId":"58","severity":1,"message":"63","line":13,"column":7,"nodeType":"60","messageId":"61","endLine":13,"endColumn":22},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m initialState \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 | \u001b[39m    []\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39m    loading\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m    errorText\u001b[33m:\u001b[39m \u001b[32m'null'\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 8 | \u001b[39m}\u001b[0m","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 50 | \u001b[39m\u001b[90m//         });\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 51 | \u001b[39m        \u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 | \u001b[39m}\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m\u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 53 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 54 | \u001b[39m\u001b[90m// export function addSmurf(newSmurf) {\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 55 | \u001b[39m\u001b[90m//     return {\u001b[39m\u001b[0m","no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'smurf' is assigned a value but never used.","'mapStateToProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]